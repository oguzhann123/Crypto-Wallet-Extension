{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Interface } from \"../abi/index.js\";\nimport { getCreateAddress } from \"../address/index.js\";\nimport { concat, defineProperties, getBytes, hexlify, assert, assertArgument } from \"../utils/index.js\";\nimport { BaseContract, copyOverrides, resolveArgs } from \"./contract.js\";\n// A = Arguments to the constructor\n// I = Interface of deployed contracts\nexport var ContractFactory = /*#__PURE__*/function () {\n  function ContractFactory(abi, bytecode, runner) {\n    _classCallCheck(this, ContractFactory);\n    _defineProperty(this, \"interface\", void 0);\n    _defineProperty(this, \"bytecode\", void 0);\n    _defineProperty(this, \"runner\", void 0);\n    var iface = Interface.from(abi);\n    // Dereference Solidity bytecode objects and allow a missing `0x`-prefix\n    if (bytecode instanceof Uint8Array) {\n      bytecode = hexlify(getBytes(bytecode));\n    } else {\n      if (typeof bytecode === \"object\") {\n        bytecode = bytecode.object;\n      }\n      if (!bytecode.startsWith(\"0x\")) {\n        bytecode = \"0x\" + bytecode;\n      }\n      bytecode = hexlify(getBytes(bytecode));\n    }\n    defineProperties(this, {\n      bytecode: bytecode,\n      interface: iface,\n      runner: runner || null\n    });\n  }\n  _createClass(ContractFactory, [{\n    key: \"getDeployTransaction\",\n    value: function () {\n      var _getDeployTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var overrides,\n          fragment,\n          _len,\n          args,\n          _key,\n          resolvedArgs,\n          data,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              overrides = {};\n              fragment = this.interface.deploy;\n              for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = _args[_key];\n              }\n              if (!(fragment.inputs.length + 1 === args.length)) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 6;\n              return copyOverrides(args.pop());\n            case 6:\n              overrides = _context.sent;\n            case 7:\n              if (!(fragment.inputs.length !== args.length)) {\n                _context.next = 9;\n                break;\n              }\n              throw new Error(\"incorrect number of arguments to constructor\");\n            case 9:\n              _context.next = 11;\n              return resolveArgs(this.runner, fragment.inputs, args);\n            case 11:\n              resolvedArgs = _context.sent;\n              data = concat([this.bytecode, this.interface.encodeDeploy(resolvedArgs)]);\n              return _context.abrupt(\"return\", Object.assign({}, overrides, {\n                data: data\n              }));\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getDeployTransaction() {\n        return _getDeployTransaction.apply(this, arguments);\n      }\n      return getDeployTransaction;\n    }()\n  }, {\n    key: \"deploy\",\n    value: function () {\n      var _deploy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var tx,\n          sentTx,\n          address,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getDeployTransaction.apply(this, _args2);\n            case 2:\n              tx = _context2.sent;\n              assert(this.runner && typeof this.runner.sendTransaction === \"function\", \"factory runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"sendTransaction\"\n              });\n              _context2.next = 6;\n              return this.runner.sendTransaction(tx);\n            case 6:\n              sentTx = _context2.sent;\n              address = getCreateAddress(sentTx);\n              return _context2.abrupt(\"return\", new BaseContract(address, this.interface, this.runner, sentTx));\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function deploy() {\n        return _deploy.apply(this, arguments);\n      }\n      return deploy;\n    }()\n  }, {\n    key: \"connect\",\n    value: function connect(runner) {\n      return new ContractFactory(this.interface, this.bytecode, runner);\n    }\n  }], [{\n    key: \"fromSolidity\",\n    value: function fromSolidity(output, runner) {\n      assertArgument(output != null, \"bad compiler output\", \"output\", output);\n      if (typeof output === \"string\") {\n        output = JSON.parse(output);\n      }\n      var abi = output.abi;\n      var bytecode = \"\";\n      if (output.bytecode) {\n        bytecode = output.bytecode;\n      } else if (output.evm && output.evm.bytecode) {\n        bytecode = output.evm.bytecode;\n      }\n      return new this(abi, bytecode, runner);\n    }\n  }]);\n  return ContractFactory;\n}();","map":{"version":3,"names":["Interface","getCreateAddress","concat","defineProperties","getBytes","hexlify","assert","assertArgument","BaseContract","copyOverrides","resolveArgs","ContractFactory","abi","bytecode","runner","_classCallCheck","_defineProperty","iface","from","Uint8Array","object","startsWith","interface","_createClass","key","value","_getDeployTransaction","_asyncToGenerator","_regeneratorRuntime","mark","_callee","overrides","fragment","_len","args","_key","resolvedArgs","data","_args","arguments","wrap","_callee$","_context","prev","next","deploy","length","Array","inputs","pop","sent","Error","encodeDeploy","abrupt","Object","assign","stop","getDeployTransaction","apply","_deploy","_callee2","tx","sentTx","address","_args2","_callee2$","_context2","sendTransaction","operation","connect","fromSolidity","output","JSON","parse","evm"],"sources":["C:\\Users\\Oguzhan\\Desktop\\BlockGuard\\mwallet\\node_modules\\ethers\\src.ts\\contract\\factory.ts"],"sourcesContent":["\nimport { Interface } from \"../abi/index.js\";\nimport { getCreateAddress } from \"../address/index.js\";\nimport {\n    concat, defineProperties, getBytes, hexlify,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { BaseContract, copyOverrides, resolveArgs } from \"./contract.js\";\n\nimport type { InterfaceAbi } from \"../abi/index.js\";\nimport type { ContractRunner } from \"../providers/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type {\n    ContractInterface, ContractMethodArgs, ContractDeployTransaction,\n} from \"./types.js\";\nimport type { ContractTransactionResponse } from \"./wrappers.js\";\n\n\n// A = Arguments to the constructor\n// I = Interface of deployed contracts\nexport class ContractFactory<A extends Array<any> = Array<any>, I = BaseContract> {\n    readonly interface!: Interface;\n    readonly bytecode!: string;\n    readonly runner!: null | ContractRunner;\n\n    constructor(abi: Interface | InterfaceAbi, bytecode: BytesLike | { object: string }, runner?: null | ContractRunner) {\n        const iface = Interface.from(abi);\n\n        // Dereference Solidity bytecode objects and allow a missing `0x`-prefix\n        if (bytecode instanceof Uint8Array) {\n            bytecode = hexlify(getBytes(bytecode));\n        } else {\n            if (typeof(bytecode) === \"object\") { bytecode = bytecode.object; }\n            if (!bytecode.startsWith(\"0x\")) { bytecode = \"0x\" + bytecode; }\n            bytecode = hexlify(getBytes(bytecode));\n        }\n\n        defineProperties<ContractFactory>(this, {\n            bytecode, interface: iface, runner: (runner || null)\n        });\n    }\n\n    async getDeployTransaction(...args: ContractMethodArgs<A>): Promise<ContractDeployTransaction> {\n        let overrides: Omit<ContractDeployTransaction, \"data\"> = { };\n\n        const fragment = this.interface.deploy;\n\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"incorrect number of arguments to constructor\");\n        }\n\n        const resolvedArgs = await resolveArgs(this.runner, fragment.inputs, args);\n\n        const data = concat([ this.bytecode, this.interface.encodeDeploy(resolvedArgs) ]);\n        return Object.assign({ }, overrides, { data });\n    }\n\n    async deploy(...args: ContractMethodArgs<A>): Promise<BaseContract & { deploymentTransaction(): ContractTransactionResponse } & Omit<I, keyof BaseContract>> {\n        const tx = await this.getDeployTransaction(...args);\n\n        assert(this.runner && typeof(this.runner.sendTransaction) === \"function\",\n            \"factory runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"sendTransaction\" });\n\n        const sentTx = await this.runner.sendTransaction(tx);\n        const address = getCreateAddress(sentTx);\n        return new (<any>BaseContract)(address, this.interface, this.runner, sentTx);\n    }\n\n    connect(runner: null | ContractRunner): ContractFactory<A, I> {\n        return new ContractFactory(this.interface, this.bytecode, runner);\n    }\n\n    static fromSolidity<A extends Array<any> = Array<any>, I = ContractInterface>(output: any, runner?: ContractRunner): ContractFactory<A, I> {\n        assertArgument(output != null, \"bad compiler output\", \"output\", output);\n\n        if (typeof(output) === \"string\") { output = JSON.parse(output); }\n\n        const abi = output.abi;\n\n        let bytecode = \"\";\n        if (output.bytecode) {\n            bytecode = output.bytecode;\n        } else if (output.evm && output.evm.bytecode) {\n            bytecode = output.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, runner);\n    }\n}\n"],"mappings":";;;;;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SACIC,MAAM,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,OAAO,EAC3CC,MAAM,EAAEC,cAAc,QACnB,mBAAmB;AAE1B,SAASC,YAAY,EAAEC,aAAa,EAAEC,WAAW,QAAQ,eAAe;AAYxE;AACA;AACA,WAAaC,eAAe;EAKxB,SAAAA,gBAAYC,GAA6B,EAAEC,QAAwC,EAAEC,MAA8B;IAAAC,eAAA,OAAAJ,eAAA;IAAAK,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAC/G,IAAMC,KAAK,GAAGjB,SAAS,CAACkB,IAAI,CAACN,GAAG,CAAC;IAEjC;IACA,IAAIC,QAAQ,YAAYM,UAAU,EAAE;MAChCN,QAAQ,GAAGR,OAAO,CAACD,QAAQ,CAACS,QAAQ,CAAC,CAAC;KACzC,MAAM;MACH,IAAI,OAAOA,QAAS,KAAK,QAAQ,EAAE;QAAEA,QAAQ,GAAGA,QAAQ,CAACO,MAAM;;MAC/D,IAAI,CAACP,QAAQ,CAACQ,UAAU,CAAC,IAAI,CAAC,EAAE;QAAER,QAAQ,GAAG,IAAI,GAAGA,QAAQ;;MAC5DA,QAAQ,GAAGR,OAAO,CAACD,QAAQ,CAACS,QAAQ,CAAC,CAAC;;IAG1CV,gBAAgB,CAAkB,IAAI,EAAE;MACpCU,QAAQ,EAARA,QAAQ;MAAES,SAAS,EAAEL,KAAK;MAAEH,MAAM,EAAGA,MAAM,IAAI;KAClD,CAAC;EACN;EAACS,YAAA,CAAAZ,eAAA;IAAAa,GAAA;IAAAC,KAAA;MAAA,IAAAC,qBAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAC,QAAA;QAAA,IAAAC,SAAA;UAAAC,QAAA;UAAAC,IAAA;UAAAC,IAAA;UAAAC,IAAA;UAAAC,YAAA;UAAAC,IAAA;UAAAC,KAAA,GAAAC,SAAA;QAAA,OAAAX,mBAAA,GAAAY,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACQb,SAAS,GAA4C,EAAG;cAEtDC,QAAQ,GAAG,IAAI,CAACV,SAAS,CAACuB,MAAM;cAAA,KAAAZ,IAAA,GAAAK,KAAA,CAAAQ,MAAA,EAHZZ,IAA2B,OAAAa,KAAA,CAAAd,IAAA,GAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;gBAA3BD,IAA2B,CAAAC,IAAA,IAAAG,KAAA,CAAAH,IAAA;cAAA;cAAA,MAKjDH,QAAQ,CAACgB,MAAM,CAACF,MAAM,GAAG,CAAC,KAAKZ,IAAI,CAACY,MAAM;gBAAAJ,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACxBnC,aAAa,CAACyB,IAAI,CAACe,GAAG,EAAE,CAAC;YAAA;cAA3ClB,SAAS,GAAAW,QAAA,CAAAQ,IAAA;YAAA;cAAA,MAGTlB,QAAQ,CAACgB,MAAM,CAACF,MAAM,KAAKZ,IAAI,CAACY,MAAM;gBAAAJ,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,MAChC,IAAIO,KAAK,CAAC,8CAA8C,CAAC;YAAA;cAAAT,QAAA,CAAAE,IAAA;cAAA,OAGxClC,WAAW,CAAC,IAAI,CAACI,MAAM,EAAEkB,QAAQ,CAACgB,MAAM,EAAEd,IAAI,CAAC;YAAA;cAApEE,YAAY,GAAAM,QAAA,CAAAQ,IAAA;cAEZb,IAAI,GAAGnC,MAAM,CAAC,CAAE,IAAI,CAACW,QAAQ,EAAE,IAAI,CAACS,SAAS,CAAC8B,YAAY,CAAChB,YAAY,CAAC,CAAE,CAAC;cAAA,OAAAM,QAAA,CAAAW,MAAA,WAC1EC,MAAM,CAACC,MAAM,CAAC,EAAG,EAAExB,SAAS,EAAE;gBAAEM,IAAI,EAAJA;cAAI,CAAE,CAAC;YAAA;YAAA;cAAA,OAAAK,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAA1B,OAAA;MAAA,CACjD;MAAA,SAAA2B,qBAAA;QAAA,OAAA/B,qBAAA,CAAAgC,KAAA,OAAAnB,SAAA;MAAA;MAAA,OAAAkB,oBAAA;IAAA;EAAA;IAAAjC,GAAA;IAAAC,KAAA;MAAA,IAAAkC,OAAA,GAAAhC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAA+B,SAAA;QAAA,IAAAC,EAAA;UAAAC,MAAA;UAAAC,OAAA;UAAAC,MAAA,GAAAzB,SAAA;QAAA,OAAAX,mBAAA,GAAAY,IAAA,UAAAyB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvB,IAAA,GAAAuB,SAAA,CAAAtB,IAAA;YAAA;cAAAsB,SAAA,CAAAtB,IAAA;cAAA,OACqB,IAAI,CAACa,oBAAoB,CAAAC,KAAA,CAAzB,IAAI,EAAAM,MAAA,CAA8B;YAAA;cAA7CH,EAAE,GAAAK,SAAA,CAAAhB,IAAA;cAER5C,MAAM,CAAC,IAAI,CAACQ,MAAM,IAAI,OAAO,IAAI,CAACA,MAAM,CAACqD,eAAgB,KAAK,UAAU,EACpE,sDAAsD,EAAE,uBAAuB,EAAE;gBACjFC,SAAS,EAAE;eAAmB,CAAC;cAACF,SAAA,CAAAtB,IAAA;cAAA,OAEf,IAAI,CAAC9B,MAAM,CAACqD,eAAe,CAACN,EAAE,CAAC;YAAA;cAA9CC,MAAM,GAAAI,SAAA,CAAAhB,IAAA;cACNa,OAAO,GAAG9D,gBAAgB,CAAC6D,MAAM,CAAC;cAAA,OAAAI,SAAA,CAAAb,MAAA,WACjC,IAAU7C,YAAa,CAACuD,OAAO,EAAE,IAAI,CAACzC,SAAS,EAAE,IAAI,CAACR,MAAM,EAAEgD,MAAM,CAAC;YAAA;YAAA;cAAA,OAAAI,SAAA,CAAAV,IAAA;UAAA;QAAA,GAAAI,QAAA;MAAA,CAC/E;MAAA,SAAAf,OAAA;QAAA,OAAAc,OAAA,CAAAD,KAAA,OAAAnB,SAAA;MAAA;MAAA,OAAAM,MAAA;IAAA;EAAA;IAAArB,GAAA;IAAAC,KAAA,EAED,SAAA4C,QAAQvD,MAA6B;MACjC,OAAO,IAAIH,eAAe,CAAC,IAAI,CAACW,SAAS,EAAE,IAAI,CAACT,QAAQ,EAAEC,MAAM,CAAC;IACrE;EAAC;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAA6C,aAA8EC,MAAW,EAAEzD,MAAuB;MAC9GP,cAAc,CAACgE,MAAM,IAAI,IAAI,EAAE,qBAAqB,EAAE,QAAQ,EAAEA,MAAM,CAAC;MAEvE,IAAI,OAAOA,MAAO,KAAK,QAAQ,EAAE;QAAEA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC;;MAE9D,IAAM3D,GAAG,GAAG2D,MAAM,CAAC3D,GAAG;MAEtB,IAAIC,QAAQ,GAAG,EAAE;MACjB,IAAI0D,MAAM,CAAC1D,QAAQ,EAAE;QACjBA,QAAQ,GAAG0D,MAAM,CAAC1D,QAAQ;OAC7B,MAAM,IAAI0D,MAAM,CAACG,GAAG,IAAIH,MAAM,CAACG,GAAG,CAAC7D,QAAQ,EAAE;QAC1CA,QAAQ,GAAG0D,MAAM,CAACG,GAAG,CAAC7D,QAAQ;;MAGlC,OAAO,IAAI,IAAI,CAACD,GAAG,EAAEC,QAAQ,EAAEC,MAAM,CAAC;IAC1C;EAAC;EAAA,OAAAH,eAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}