{"ast":null,"code":"import _classCallCheck from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Output Feedback\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OFB_iv, _OFB_lastPrecipher, _OFB_lastPrecipherIndex;\nimport { ModeOfOperation } from \"./mode.js\";\nexport var OFB = /*#__PURE__*/function (_ModeOfOperation) {\n  _inherits(OFB, _ModeOfOperation);\n  var _super = _createSuper(OFB);\n  function OFB(key, iv) {\n    var _this;\n    _classCallCheck(this, OFB);\n    _this = _super.call(this, \"OFB\", key, OFB);\n    _OFB_iv.set(_assertThisInitialized(_this), void 0);\n    _OFB_lastPrecipher.set(_assertThisInitialized(_this), void 0);\n    _OFB_lastPrecipherIndex.set(_assertThisInitialized(_this), void 0);\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      __classPrivateFieldSet(_assertThisInitialized(_this), _OFB_iv, new Uint8Array(iv), \"f\");\n    } else {\n      __classPrivateFieldSet(_assertThisInitialized(_this), _OFB_iv, new Uint8Array(16), \"f\");\n    }\n    __classPrivateFieldSet(_assertThisInitialized(_this), _OFB_lastPrecipher, _this.iv, \"f\");\n    __classPrivateFieldSet(_assertThisInitialized(_this), _OFB_lastPrecipherIndex, 16, \"f\");\n    return _this;\n  }\n  _createClass(OFB, [{\n    key: \"iv\",\n    get: function get() {\n      return new Uint8Array(__classPrivateFieldGet(this, _OFB_iv, \"f\"));\n    }\n  }, {\n    key: \"encrypt\",\n    value: function encrypt(plaintext) {\n      var _a, _b;\n      if (plaintext.length % 16) {\n        throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n      }\n      var ciphertext = new Uint8Array(plaintext);\n      for (var i = 0; i < ciphertext.length; i++) {\n        if (__classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\") === 16) {\n          __classPrivateFieldSet(this, _OFB_lastPrecipher, this.aes.encrypt(__classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")), \"f\");\n          __classPrivateFieldSet(this, _OFB_lastPrecipherIndex, 0, \"f\");\n        }\n        ciphertext[i] ^= __classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")[(__classPrivateFieldSet(this, _OFB_lastPrecipherIndex, (_b = __classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\"), _a = _b++, _b), \"f\"), _a)];\n      }\n      return ciphertext;\n    }\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(ciphertext) {\n      if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n      }\n      return this.encrypt(ciphertext);\n    }\n  }]);\n  return OFB;\n}(ModeOfOperation);\n_OFB_iv = new WeakMap(), _OFB_lastPrecipher = new WeakMap(), _OFB_lastPrecipherIndex = new WeakMap();","map":{"version":3,"names":["ModeOfOperation","OFB","_ModeOfOperation","_inherits","_super","_createSuper","key","iv","_this","_classCallCheck","call","_OFB_iv","set","_assertThisInitialized","_OFB_lastPrecipher","_OFB_lastPrecipherIndex","length","TypeError","__classPrivateFieldSet","Uint8Array","_createClass","get","__classPrivateFieldGet","value","encrypt","plaintext","ciphertext","i","aes","_b","_a","decrypt"],"sources":["C:\\Users\\Oguzhan\\Desktop\\BlockGuard\\mwallet\\node_modules\\aes-js\\src.ts\\mode-ofb.ts"],"sourcesContent":["// Output Feedback\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class OFB extends ModeOfOperation {\n  #iv: Uint8Array;\n  #lastPrecipher: Uint8Array;\n  #lastPrecipherIndex: number;\n\n  constructor(key: Uint8Array, iv?: Uint8Array) {\n    super(\"OFB\", key, OFB);\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#lastPrecipher = this.iv;\n    this.#lastPrecipherIndex = 16;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const ciphertext = new Uint8Array(plaintext);\n    for (let i = 0; i < ciphertext.length; i++) {\n      if (this.#lastPrecipherIndex === 16) {\n          this.#lastPrecipher = this.aes.encrypt(this.#lastPrecipher);\n          this.#lastPrecipherIndex = 0;\n      }\n      ciphertext[i] ^= this.#lastPrecipher[this.#lastPrecipherIndex++];\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n    return this.encrypt(ciphertext);\n  }\n}\n"],"mappings":";;;;;AAAA;;;;;;;;;;;;;AAEA,SAASA,eAAe,QAAQ,WAAW;AAE3C,WAAaC,GAAI,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,GAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,GAAA;EAKf,SAAAA,IAAYK,GAAe,EAAEC,EAAe;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,GAAA;IAC1CO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAM,KAAK,EAAEJ,GAAG,EAAEL,GAAG;IALvBU,OAAA,CAAAC,GAAA,CAAAC,sBAAA,CAAAL,KAAA;IACAM,kBAAA,CAAAF,GAAA,CAAAC,sBAAA,CAAAL,KAAA;IACAO,uBAAA,CAAAH,GAAA,CAAAC,sBAAA,CAAAL,KAAA;IAKE,IAAID,EAAE,EAAE;MACN,IAAIA,EAAE,CAACS,MAAM,GAAG,EAAE,EAAE;QAClB,MAAM,IAAIC,SAAS,CAAC,oCAAoC,CAAC;;MAE3DC,sBAAA,CAAAL,sBAAA,CAAAL,KAAA,GAAIG,OAAA,EAAO,IAAIQ,UAAU,CAACZ,EAAE,CAAC;KAC9B,MAAM;MACLW,sBAAA,CAAAL,sBAAA,CAAAL,KAAA,GAAIG,OAAA,EAAO,IAAIQ,UAAU,CAAC,EAAE,CAAC;;IAG/BD,sBAAA,CAAAL,sBAAA,CAAAL,KAAA,GAAIM,kBAAA,EAAkBN,KAAA,CAAKD,EAAE;IAC7BW,sBAAA,CAAAL,sBAAA,CAAAL,KAAA,GAAIO,uBAAA,EAAuB,EAAE;IAAC,OAAAP,KAAA;EAChC;EAACY,YAAA,CAAAnB,GAAA;IAAAK,GAAA;IAAAe,GAAA,EAED,SAAAA,IAAA,EAAM;MAAiB,OAAO,IAAIF,UAAU,CAACG,sBAAA,KAAI,EAAAX,OAAA,MAAI,CAAC;IAAE;EAAC;IAAAL,GAAA;IAAAiB,KAAA,EAEzD,SAAAC,QAAQC,SAAqB;;MAC3B,IAAIA,SAAS,CAACT,MAAM,GAAG,EAAE,EAAE;QACzB,MAAM,IAAIC,SAAS,CAAC,uDAAuD,CAAC;;MAG9E,IAAMS,UAAU,GAAG,IAAIP,UAAU,CAACM,SAAS,CAAC;MAC5C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,CAACV,MAAM,EAAEW,CAAC,EAAE,EAAE;QAC1C,IAAIL,sBAAA,KAAI,EAAAP,uBAAA,MAAoB,KAAK,EAAE,EAAE;UACjCG,sBAAA,KAAI,EAAAJ,kBAAA,EAAkB,IAAI,CAACc,GAAG,CAACJ,OAAO,CAACF,sBAAA,KAAI,EAAAR,kBAAA,MAAe,CAAC;UAC3DI,sBAAA,KAAI,EAAAH,uBAAA,EAAuB,CAAC;;QAEhCW,UAAU,CAACC,CAAC,CAAC,IAAIL,sBAAA,KAAI,EAAAR,kBAAA,MAAe,EAACI,sBAAA,OAAAH,uBAAA,GAAAc,EAAA,GAAAP,sBAAA,OAAAP,uBAAA,MAAwB,EAAxBe,EAAA,GAAAD,EAAA,EAA0B,EAAAA,EAAA,SAAAC,EAAA,EAAC;;MAGlE,OAAOJ,UAAU;IACnB;EAAC;IAAApB,GAAA;IAAAiB,KAAA,EAED,SAAAQ,QAAQL,UAAsB;MAC5B,IAAIA,UAAU,CAACV,MAAM,GAAG,EAAE,EAAE;QACxB,MAAM,IAAIC,SAAS,CAAC,wDAAwD,CAAC;;MAEjF,OAAO,IAAI,CAACO,OAAO,CAACE,UAAU,CAAC;IACjC;EAAC;EAAA,OAAAzB,GAAA;AAAA,EA7CsBD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}