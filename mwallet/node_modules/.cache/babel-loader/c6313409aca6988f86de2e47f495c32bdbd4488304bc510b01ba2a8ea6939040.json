{"ast":null,"code":"import _classCallCheck from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Electronic Code Book\nimport { ModeOfOperation } from \"./mode.js\";\nexport var ECB = /*#__PURE__*/function (_ModeOfOperation) {\n  _inherits(ECB, _ModeOfOperation);\n  var _super = _createSuper(ECB);\n  function ECB(key) {\n    _classCallCheck(this, ECB);\n    return _super.call(this, \"ECB\", key, ECB);\n  }\n  _createClass(ECB, [{\n    key: \"encrypt\",\n    value: function encrypt(plaintext) {\n      if (plaintext.length % 16) {\n        throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n      }\n      var crypttext = new Uint8Array(plaintext.length);\n      for (var i = 0; i < plaintext.length; i += 16) {\n        crypttext.set(this.aes.encrypt(plaintext.subarray(i, i + 16)), i);\n      }\n      return crypttext;\n    }\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(crypttext) {\n      if (crypttext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n      }\n      var plaintext = new Uint8Array(crypttext.length);\n      for (var i = 0; i < crypttext.length; i += 16) {\n        plaintext.set(this.aes.decrypt(crypttext.subarray(i, i + 16)), i);\n      }\n      return plaintext;\n    }\n  }]);\n  return ECB;\n}(ModeOfOperation);","map":{"version":3,"names":["ModeOfOperation","ECB","_ModeOfOperation","_inherits","_super","_createSuper","key","_classCallCheck","call","_createClass","value","encrypt","plaintext","length","TypeError","crypttext","Uint8Array","i","set","aes","subarray","decrypt"],"sources":["C:\\Users\\Oguzhan\\Desktop\\BlockGuard\\mwallet\\node_modules\\aes-js\\src.ts\\mode-ecb.ts"],"sourcesContent":["// Electronic Code Book\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class ECB extends ModeOfOperation {\n\n  constructor(key: Uint8Array) {\n    super(\"ECB\", key, ECB);\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n        throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const crypttext = new Uint8Array(plaintext.length);\n    for (let i = 0; i < plaintext.length; i += 16) {\n        crypttext.set(this.aes.encrypt(plaintext.subarray(i, i + 16)), i);\n    }\n\n    return crypttext;\n  }\n\n  decrypt(crypttext: Uint8Array): Uint8Array {\n    if (crypttext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n\n    const plaintext = new Uint8Array(crypttext.length);\n    for (let i = 0; i < crypttext.length; i += 16) {\n        plaintext.set(this.aes.decrypt(crypttext.subarray(i, i + 16)), i);\n    }\n\n    return plaintext;\n  }\n}\n"],"mappings":";;;;AAAA;AAEA,SAASA,eAAe,QAAQ,WAAW;AAE3C,WAAaC,GAAI,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,GAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,GAAA;EAEf,SAAAA,IAAYK,GAAe;IAAAC,eAAA,OAAAN,GAAA;IAAA,OAAAG,MAAA,CAAAI,IAAA,OACnB,KAAK,EAAEF,GAAG,EAAEL,GAAG;EACvB;EAACQ,YAAA,CAAAR,GAAA;IAAAK,GAAA;IAAAI,KAAA,EAED,SAAAC,QAAQC,SAAqB;MAC3B,IAAIA,SAAS,CAACC,MAAM,GAAG,EAAE,EAAE;QACvB,MAAM,IAAIC,SAAS,CAAC,uDAAuD,CAAC;;MAGhF,IAAMC,SAAS,GAAG,IAAIC,UAAU,CAACJ,SAAS,CAACC,MAAM,CAAC;MAClD,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACC,MAAM,EAAEI,CAAC,IAAI,EAAE,EAAE;QAC3CF,SAAS,CAACG,GAAG,CAAC,IAAI,CAACC,GAAG,CAACR,OAAO,CAACC,SAAS,CAACQ,QAAQ,CAACH,CAAC,EAAEA,CAAC,GAAG,EAAE,CAAC,CAAC,EAAEA,CAAC,CAAC;;MAGrE,OAAOF,SAAS;IAClB;EAAC;IAAAT,GAAA;IAAAI,KAAA,EAED,SAAAW,QAAQN,SAAqB;MAC3B,IAAIA,SAAS,CAACF,MAAM,GAAG,EAAE,EAAE;QACvB,MAAM,IAAIC,SAAS,CAAC,wDAAwD,CAAC;;MAGjF,IAAMF,SAAS,GAAG,IAAII,UAAU,CAACD,SAAS,CAACF,MAAM,CAAC;MAClD,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACF,MAAM,EAAEI,CAAC,IAAI,EAAE,EAAE;QAC3CL,SAAS,CAACM,GAAG,CAAC,IAAI,CAACC,GAAG,CAACE,OAAO,CAACN,SAAS,CAACK,QAAQ,CAACH,CAAC,EAAEA,CAAC,GAAG,EAAE,CAAC,CAAC,EAAEA,CAAC,CAAC;;MAGrE,OAAOL,SAAS;IAClB;EAAC;EAAA,OAAAX,GAAA;AAAA,EA9BsBD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}