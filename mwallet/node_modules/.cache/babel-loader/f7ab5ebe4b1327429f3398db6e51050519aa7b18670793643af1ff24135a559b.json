{"ast":null,"code":"import _classCallCheck from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { defineProperties, fromTwos, getBigInt, mask, toTwos } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nvar BN_0 = BigInt(0);\nvar BN_1 = BigInt(1);\nvar BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @_ignore\n */\nexport var NumberCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(NumberCoder, _Coder);\n  var _super = _createSuper(NumberCoder);\n  function NumberCoder(size, signed, localName) {\n    var _this;\n    _classCallCheck(this, NumberCoder);\n    var name = (signed ? \"int\" : \"uint\") + size * 8;\n    _this = _super.call(this, name, name, localName, false);\n    _defineProperty(_assertThisInitialized(_this), \"size\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"signed\", void 0);\n    defineProperties(_assertThisInitialized(_this), {\n      size: size,\n      signed: signed\n    }, {\n      size: \"number\",\n      signed: \"boolean\"\n    });\n    return _this;\n  }\n  _createClass(NumberCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return 0;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, _value) {\n      var value = getBigInt(Typed.dereference(_value, this.type));\n      // Check bounds are safe for encoding\n      var maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n      if (this.signed) {\n        var bounds = mask(maxUintValue, this.size * 8 - 1);\n        if (value > bounds || value < -(bounds + BN_1)) {\n          this._throwError(\"value out-of-bounds\", _value);\n        }\n        value = toTwos(value, 8 * WordSize);\n      } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n        this._throwError(\"value out-of-bounds\", _value);\n      }\n      return writer.writeValue(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      var value = mask(reader.readValue(), this.size * 8);\n      if (this.signed) {\n        value = fromTwos(value, this.size * 8);\n      }\n      return value;\n    }\n  }]);\n  return NumberCoder;\n}(Coder);","map":{"version":3,"names":["defineProperties","fromTwos","getBigInt","mask","toTwos","Typed","Coder","WordSize","BN_0","BigInt","BN_1","BN_MAX_UINT256","NumberCoder","_Coder","_inherits","_super","_createSuper","size","signed","localName","_this","_classCallCheck","name","call","_defineProperty","_assertThisInitialized","_createClass","key","value","defaultValue","encode","writer","_value","dereference","type","maxUintValue","bounds","_throwError","writeValue","decode","reader","readValue"],"sources":["C:\\Users\\Oguzhan\\Desktop\\BlockGuard\\mwallet\\node_modules\\ethers\\src.ts\\abi\\coders\\number.ts"],"sourcesContent":["import {\n    defineProperties, fromTwos, getBigInt, mask, toTwos\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\n\nimport type { BigNumberish } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    readonly size!: number;\n    readonly signed!: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        defineProperties<NumberCoder>(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, _value: BigNumberish | Typed): number {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        let value = mask(reader.readValue(), this.size * 8);\n\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n\n        return value;\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}