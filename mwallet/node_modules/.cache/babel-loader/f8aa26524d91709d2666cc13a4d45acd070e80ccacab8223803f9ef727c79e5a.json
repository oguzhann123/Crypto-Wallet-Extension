{"ast":null,"code":"import _classCallCheck from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classPrivateMethodInitSpec from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js\";\nimport _classPrivateFieldInitSpec from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateMethodGet from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateMethodGet.js\";\nimport _classPrivateFieldGet from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create these necessary data.\n */\nvar _data = /*#__PURE__*/new WeakMap();\nvar _checksum = /*#__PURE__*/new WeakMap();\nvar _words = /*#__PURE__*/new WeakMap();\nvar _loadWords = /*#__PURE__*/new WeakSet();\nexport var WordlistOwl = /*#__PURE__*/function (_Wordlist) {\n  _inherits(WordlistOwl, _Wordlist);\n  var _super = _createSuper(WordlistOwl);\n  /**\n   *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n   *  and validated against the %%checksum%%.\n   */\n  function WordlistOwl(locale, data, _checksum2) {\n    var _this;\n    _classCallCheck(this, WordlistOwl);\n    _this = _super.call(this, locale);\n    _classPrivateMethodInitSpec(_assertThisInitialized(_this), _loadWords);\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _data, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _checksum, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _words, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(_assertThisInitialized(_this), _data, data);\n    _classPrivateFieldSet(_assertThisInitialized(_this), _checksum, _checksum2);\n    _classPrivateFieldSet(_assertThisInitialized(_this), _words, null);\n    return _this;\n  }\n  _createClass(WordlistOwl, [{\n    key: \"_data\",\n    get: function get() {\n      return _classPrivateFieldGet(this, _data);\n    }\n  }, {\n    key: \"_decodeWords\",\n    value: function _decodeWords() {\n      return decodeOwl(_classPrivateFieldGet(this, _data));\n    }\n  }, {\n    key: \"getWord\",\n    value: function getWord(index) {\n      var words = _classPrivateMethodGet(this, _loadWords, _loadWords2).call(this);\n      assertArgument(index >= 0 && index < words.length, \"invalid word index: \".concat(index), \"index\", index);\n      return words[index];\n    }\n  }, {\n    key: \"getWordIndex\",\n    value: function getWordIndex(word) {\n      return _classPrivateMethodGet(this, _loadWords, _loadWords2).call(this).indexOf(word);\n    }\n  }]);\n  return WordlistOwl;\n}(Wordlist);\nfunction _loadWords2() {\n  if (_classPrivateFieldGet(this, _words) == null) {\n    var words = this._decodeWords();\n    // Verify the computed list matches the official list\n    var checksum = id(words.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== _classPrivateFieldGet(this, _checksum)) {\n      throw new Error(\"BIP39 Wordlist for \".concat(this.locale, \" FAILED\"));\n    }\n    /* c8 ignore stop */\n    _classPrivateFieldSet(this, _words, words);\n  }\n  return _classPrivateFieldGet(this, _words);\n}","map":{"version":3,"names":["id","assertArgument","decodeOwl","Wordlist","_data","WeakMap","_checksum","_words","_loadWords","WeakSet","WordlistOwl","_Wordlist","_inherits","_super","_createSuper","locale","data","checksum","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","value","_classPrivateFieldSet","_createClass","key","get","_classPrivateFieldGet","_decodeWords","getWord","index","words","_classPrivateMethodGet","_loadWords2","length","concat","getWordIndex","word","indexOf","join","Error"],"sources":["C:\\Users\\Oguzhan\\Desktop\\BlockGuard\\mwallet\\node_modules\\ethers\\src.ts\\wordlists\\wordlist-owl.ts"],"sourcesContent":["\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\n\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create these necessary data.\n */\nexport class WordlistOwl extends Wordlist {\n    #data: string;\n    #checksum: string;\n\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n     *  and validated against the %%checksum%%.\n     */\n    constructor(locale: string, data: string, checksum: string) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n\n    get _data(): string { return this.#data; }\n\n    _decodeWords(): Array<string> {\n        return decodeOwl(this.#data);\n    }\n\n    #words: null | Array<string>;\n    #loadWords(): Array<string> {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n\n            // Verify the computed list matches the official list\n            const checksum = id(words.join(\"\\n\") + \"\\n\");\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${ this.locale } FAILED`);\n            }\n            /* c8 ignore stop */\n\n            this.#words = words;\n        }\n        return this.#words;\n    }\n\n    getWord(index: number): string {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return this.#loadWords().indexOf(word);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}