{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classPrivateFieldInitSpec from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldSet from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nimport _classPrivateFieldGet from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _assertThisInitialized from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"C:/Users/Oguzhan/Desktop/BlockGuard/mwallet/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { defineProperties } from \"../utils/properties.js\";\nimport { assertArgument } from \"../utils/index.js\";\nvar EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\nexport var NetworkPlugin = /*#__PURE__*/function () {\n  function NetworkPlugin(name) {\n    _classCallCheck(this, NetworkPlugin);\n    _defineProperty(this, \"name\", void 0);\n    defineProperties(this, {\n      name: name\n    });\n  }\n  _createClass(NetworkPlugin, [{\n    key: \"clone\",\n    value: function clone() {\n      return new NetworkPlugin(this.name);\n    }\n  }]);\n  return NetworkPlugin;\n}();\nexport var GasCostPlugin = /*#__PURE__*/function (_NetworkPlugin) {\n  _inherits(GasCostPlugin, _NetworkPlugin);\n  var _super = _createSuper(GasCostPlugin);\n  function GasCostPlugin(effectiveBlock, costs) {\n    var _this;\n    _classCallCheck(this, GasCostPlugin);\n    if (effectiveBlock == null) {\n      effectiveBlock = 0;\n    }\n    _this = _super.call(this, \"org.ethers.network.plugins.GasCost#\".concat(effectiveBlock || 0));\n    _defineProperty(_assertThisInitialized(_this), \"effectiveBlock\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"txBase\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"txCreate\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"txDataZero\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"txDataNonzero\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"txAccessListStorageKey\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"txAccessListAddress\", void 0);\n    var props = {\n      effectiveBlock: effectiveBlock\n    };\n    function set(name, nullish) {\n      var value = (costs || {})[name];\n      if (value == null) {\n        value = nullish;\n      }\n      assertArgument(typeof value === \"number\", \"invalud value for \".concat(name), \"costs\", costs);\n      props[name] = value;\n    }\n    set(\"txBase\", 21000);\n    set(\"txCreate\", 32000);\n    set(\"txDataZero\", 4);\n    set(\"txDataNonzero\", 16);\n    set(\"txAccessListStorageKey\", 1900);\n    set(\"txAccessListAddress\", 2400);\n    defineProperties(_assertThisInitialized(_this), props);\n    return _this;\n  }\n  _createClass(GasCostPlugin, [{\n    key: \"clone\",\n    value: function clone() {\n      return new GasCostPlugin(this.effectiveBlock, this);\n    }\n  }]);\n  return GasCostPlugin;\n}(NetworkPlugin);\n// Networks shoudl use this plugin to specify the contract address\n// and network necessary to resolve ENS names.\nexport var EnsPlugin = /*#__PURE__*/function (_NetworkPlugin2) {\n  _inherits(EnsPlugin, _NetworkPlugin2);\n  var _super2 = _createSuper(EnsPlugin);\n  function EnsPlugin(address, targetNetwork) {\n    var _this2;\n    _classCallCheck(this, EnsPlugin);\n    _this2 = _super2.call(this, \"org.ethers.plugins.network.Ens\");\n    // The ENS contract address\n    _defineProperty(_assertThisInitialized(_this2), \"address\", void 0);\n    // The network ID that the ENS contract lives on\n    _defineProperty(_assertThisInitialized(_this2), \"targetNetwork\", void 0);\n    defineProperties(_assertThisInitialized(_this2), {\n      address: address || EnsAddress,\n      targetNetwork: targetNetwork == null ? 1 : targetNetwork\n    });\n    return _this2;\n  }\n  _createClass(EnsPlugin, [{\n    key: \"clone\",\n    value: function clone() {\n      return new EnsPlugin(this.address, this.targetNetwork);\n    }\n  }]);\n  return EnsPlugin;\n}(NetworkPlugin);\nvar _feeDataFunc = /*#__PURE__*/new WeakMap();\nexport var FeeDataNetworkPlugin = /*#__PURE__*/function (_NetworkPlugin3) {\n  _inherits(FeeDataNetworkPlugin, _NetworkPlugin3);\n  var _super3 = _createSuper(FeeDataNetworkPlugin);\n  function FeeDataNetworkPlugin(feeDataFunc) {\n    var _this3;\n    _classCallCheck(this, FeeDataNetworkPlugin);\n    _this3 = _super3.call(this, \"org.ethers.plugins.network.FeeData\");\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this3), _feeDataFunc, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(_assertThisInitialized(_this3), _feeDataFunc, feeDataFunc);\n    return _this3;\n  }\n  _createClass(FeeDataNetworkPlugin, [{\n    key: \"feeDataFunc\",\n    get: function get() {\n      return _classPrivateFieldGet(this, _feeDataFunc);\n    }\n  }, {\n    key: \"getFeeData\",\n    value: function () {\n      var _getFeeData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(provider) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _classPrivateFieldGet(this, _feeDataFunc).call(this, provider);\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getFeeData(_x) {\n        return _getFeeData.apply(this, arguments);\n      }\n      return getFeeData;\n    }()\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new FeeDataNetworkPlugin(_classPrivateFieldGet(this, _feeDataFunc));\n    }\n  }]);\n  return FeeDataNetworkPlugin;\n}(NetworkPlugin);\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/","map":{"version":3,"names":["defineProperties","assertArgument","EnsAddress","NetworkPlugin","name","_classCallCheck","_defineProperty","_createClass","key","value","clone","GasCostPlugin","_NetworkPlugin","_inherits","_super","_createSuper","effectiveBlock","costs","_this","call","concat","_assertThisInitialized","props","set","nullish","EnsPlugin","_NetworkPlugin2","_super2","address","targetNetwork","_this2","_feeDataFunc","WeakMap","FeeDataNetworkPlugin","_NetworkPlugin3","_super3","feeDataFunc","_this3","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","get","_classPrivateFieldGet","_getFeeData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","wrap","_callee$","_context","prev","next","abrupt","sent","stop","getFeeData","_x","apply","arguments"],"sources":["C:\\Users\\Oguzhan\\Desktop\\BlockGuard\\mwallet\\node_modules\\ethers\\src.ts\\providers\\plugins-network.ts"],"sourcesContent":["import { defineProperties } from \"../utils/properties.js\";\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport type {\n    FeeData, Provider\n} from \"./provider.js\";\n\n\n\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n\nexport class NetworkPlugin {\n    readonly name!: string;\n\n    constructor(name: string) {\n        defineProperties<NetworkPlugin>(this, { name });\n    }\n\n    clone(): NetworkPlugin {\n        return new NetworkPlugin(this.name);\n    }\n\n//    validate(network: Network): NetworkPlugin {\n//        return this;\n//    }\n}\n\n// Networks can use this plugin to override calculations for the\n// intrinsic gas cost of a transaction for networks that differ\n// from the latest hardfork on Ethereum mainnet.\nexport type GasCostParameters = {\n    txBase?: number;\n    txCreate?: number;\n    txDataZero?: number;\n    txDataNonzero?: number;\n    txAccessListStorageKey?: number;\n    txAccessListAddress?: number;\n};\n\nexport class GasCostPlugin extends NetworkPlugin implements GasCostParameters {\n    readonly effectiveBlock!: number;\n\n    readonly txBase!: number;\n    readonly txCreate!: number;\n    readonly txDataZero!: number;\n    readonly txDataNonzero!: number;\n    readonly txAccessListStorageKey!: number;\n    readonly txAccessListAddress!: number;\n\n    constructor(effectiveBlock?: number, costs?: GasCostParameters) {\n        if (effectiveBlock == null) { effectiveBlock = 0; }\n        super(`org.ethers.network.plugins.GasCost#${ (effectiveBlock || 0) }`);\n\n        const props: Record<string, number> = { effectiveBlock };\n        function set(name: keyof GasCostParameters, nullish: number): void {\n            let value = (costs || { })[name];\n            if (value == null) { value = nullish; }\n            assertArgument(typeof(value) === \"number\", `invalud value for ${ name }`, \"costs\", costs);\n            props[name] = value;\n        }\n\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n\n        defineProperties<GasCostPlugin>(this, props);\n    }\n\n    clone(): GasCostPlugin {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n\n// Networks shoudl use this plugin to specify the contract address\n// and network necessary to resolve ENS names.\nexport class EnsPlugin extends NetworkPlugin {\n\n    // The ENS contract address\n    readonly address!: string;\n\n    // The network ID that the ENS contract lives on\n    readonly targetNetwork!: number;\n\n    constructor(address?: null | string, targetNetwork?: null | number) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties<EnsPlugin>(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1: targetNetwork)\n        });\n    }\n\n    clone(): EnsPlugin {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\n\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #feeDataFunc: (provider: Provider) => Promise<FeeData>;\n\n    get feeDataFunc(): (provider: Provider) => Promise<FeeData> {\n        return this.#feeDataFunc;\n    }\n\n    constructor(feeDataFunc: (provider: Provider) => Promise<FeeData>) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n\n    async getFeeData(provider: Provider): Promise<FeeData> {\n        return await this.#feeDataFunc(provider);\n    }\n\n    clone(): FeeDataNetworkPlugin {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\n\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}